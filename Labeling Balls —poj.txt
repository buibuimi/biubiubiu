#include<iostream>
#include <queue>

using namespace std;
const int maxn=201;
bool G[maxn][maxn];
int degree[maxn];
int ans[maxn];
bool topsort(int n)
{
  priority_queue<int >q;
  int cur;
  int nelem=n;
  for(int i=1;i<=n;i++)
  {
    if(degree[i]==0)
    {
      q.push(i);//将n个点入队
    }
  }
  while(!q.empty())
  {
    cur=q.top();
    ans[nelem--]=cur;
    q.pop();
    for(int j=1;j<=n;j++)
    {

      if(G[j][cur])
      {
        degree[j]--;
        if(degree[j]==0)
        {
          q.push(j);
        }
      }
    }
  }
  if(nelem!=0)
  {
    return false;
  }
  return true;
}
int main()
{
  int t , n , m , a , b ;
  cin>>t;
  while(t--)
  {
    cin>>n>>m;
    for(int i=1;i<=n;i++)
    {
      for(int j=1;j<=n;j++)
      {
        G[i][j]=false;
      }
      degree[i]=0;
    }
    for(int i=0;i<m;i++)
    {
      cin>>a>>b;
      if(!G[a][b])
      {
        G[a][b]=true;
        degree[a]++;
      }
    }
    if(!topsort(n))
    {
      cout<<"-1"<<endl;
    }
    else
    {
      int w[maxn];
      for(int i=1;i<=n;i++)
      {
        w[ans[i]]=i;
      }
      for(int i=1;i<=n;i++)
      {
        cout<<w[i]<<" ";
      }
      cout<<endl;
    }
  }
  return 0;
}
